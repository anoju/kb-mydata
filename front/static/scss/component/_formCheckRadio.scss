//checkbox, radio
input[type='checkbox'],
input[type='radio'] {
  margin: 0;
}
div.radio,
div.checkbox {
  display: block;
  margin-right: 0;
  + div.radio,
  + div.checkbox {
    margin-top: 1.8rem;
  }
}
div.checkbox.ty2 + div.checkbox.ty2 {
  margin-top: 1.6rem;
}
.radio,
.checkbox {
  position: relative;
  display: inline-block;
  min-width: 2.4rem;
  min-height: 2.4rem;
  vertical-align: middle;
  margin-right: 2.4rem;
  &:last-child {
    margin-right: 0;
  }
  > input {
    position: absolute;
    left: 0;
    top: 0;
    width: 2.4rem;
    height: 2.4rem;
    opacity: 0;
    margin: 0;
    z-index: 2;
    &:checked + i {
      border-color: var(--primary-color);
    }
    &:disabled + i {
      opacity: 0.3;
      + .lbl {
        opacity: 0.5;
      }
    }
  }
  > i {
    position: absolute;
    left: 0;
    top: 0;
    display: inline-block;
    width: 2.4rem;
    height: 2.4rem;
    border: 0.1rem solid #ccc;
    box-sizing: border-box;
    border-radius: 50%;
    vertical-align: top;
    transition: 0.3s;
    z-index: 1;
    &:after {
      content: '';
      display: block;
      position: absolute;
      left: 0;
      top: 0;
    }
    + .lbl {
      margin-left: 2.4rem;
      padding-left: 0.8rem;
    }
  }
  > .lbl {
    position: relative;
    display: block;
    line-height: 2.2rem;
    font-size: 1.4rem;
    padding: 0.1rem 0;
    &:first-child {
      margin-right: 2.4rem;
      padding-right: 1rem;
      ~ input,
      ~ i {
        left: auto;
        right: 0;
      }
    }
    [class*='i-ico-'] {
      vertical-align: top;
      margin-top: 0.4rem;
    }
  }
  &.small:not(.btn, .switch) {
    min-width: 2rem;
    min-height: 2rem;
    margin-right: 2rem;
    &:last-child {
      margin-right: 0;
    }
    > input {
      width: 2rem;
      height: 2rem;
    }
    > i {
      width: 2rem;
      height: 2rem;
      + .lbl {
        margin-left: 2rem;
        padding-left: 0.6rem;
      }
    }
    > .lbl {
      line-height: 2rem;
      font-size: 1.4rem;
      padding: 0;
      &:first-child {
        margin-right: 2rem;
        padding-left: 0.4rem;
      }
    }
  }
  &.btn {
    > input {
      width: 100%;
      height: 100%;
      &:disabled ~ .lbl {
        // opacity: 0.3;
        background: #f8f8f8;
        color: var(--placeholder-txt-color);
      }
      &:checked ~ .lbl {
        // font-weight: bold;
        border-color: var(--primary-color);
        color: #222;
      }
      &:checked:not(:disabled) ~ .lbl {
        z-index: 1;
      }
    }
    > i {
      display: none;
    }
    .lbl {
      position: relative;
      display: flex;
      width: 100%;
      height: 4.8rem;
      line-height: inherit;
      padding: 0 0.3rem;
      text-align: center;
      font-size: inherit;
      white-space: normal;
      text-decoration: none;
      overflow: hidden;
      box-sizing: border-box;
      border-radius: 0.8rem;
      -webkit-appearance: none;
      justify-content: center;
      align-items: center;
      font-weight: normal;
      vertical-align: middle;
      margin: 0;
      border: 0.1rem solid #ebebeb;
      color: #222;
      background: #fff;
      transition: 0.3s;
      font-size: 1.4rem;
    }

    + .btn {
      margin-top: 0;
    }

    &.h44 {
      .lbl {
        height: 4.4rem;
        font-size: 1.4rem;
      }
    }
  }
  &.switch {
    min-width: 4.2rem;
    min-height: 2.4rem;
    > input {
      width: 4.2rem;
      height: 2.4rem;
      // top:0;
      &:checked {
        + i {
          &:after {
            left: 2rem;
            animation: none;
          }
          + .lbl {
            .off {
              display: none;
            }
            .on {
              display: inline;
            }
          }
        }
      }
    }
    > i {
      width: 4.2rem;
      height: 2.4rem;
      border: 0 none;
      border-radius: 1.2rem;
      background-color: #ccc;
      transition: background 0.3s ease;
      &:after {
        width: 2rem;
        height: 2rem;
        margin: 0;
        border: 0 none;
        left: 0.2rem;
        top: 0.2rem;
        border-radius: 50%;
        background: #fff;
        transition: left 0.3s ease;
        transform: none;
      }
      + .lbl {
        margin-left: 4.2rem;
        // white-space:nowrap;
      }
    }
    .lbl {
      &:first-child {
        margin-right: 4.2rem;
      }
    }
    &.small {
      min-width: 2.8rem;
      min-height: 1.6rem;
      > input {
        width: 2.8rem;
        height: 1.6rem;
        &:checked {
          + i {
            &:after {
              left: 1rem;
            }
          }
        }
      }
      > i {
        width: 2.8rem;
        height: 1.6rem;
        &:after {
          width: 1.2rem;
          height: 1.2rem;
        }
        + .lbl {
          margin-left: 2.8rem;
        }
      }
      .lbl {
        font-size: 1.4rem;
        line-height: 1.6rem;
        padding-top: 0;
        padding-bottom: 0;
        &:first-child {
          margin-right: 2.8rem;
        }
      }
    }
  }
}
.checkbox {
  > i {
    &:after {
      width: 100%;
      height: 100%;
      background: url(../images/icon/ico-check-off.png) no-repeat center center / 1.4rem auto;
    }
  }
  > input:checked + i {
    background: var(--primary-color);
    &:after {
      background-image: url(../images/icon/ico-check-on.png);
      animation: chkeckboxAni 0.25s linear;
    }
  }
  &.small:not(.btn, .switch) {
    > i {
      &:after {
        background-size: 1rem auto;
      }
    }
  }
  &.ty2 {
    > i {
      border-width: 0;
    }
    > input:checked + i {
      background-color: transparent;
      &:after {
        background-image: url(../images/icon/ico-check-2-on.png);
      }
    }
  }
}
.radio {
  > i {
    &:after {
      left: 50%;
      top: 50%;
      border-radius: 50%;
      background-color: #ccc;
      width: 1.2rem;
      height: 1.2rem;
      margin: -0.6rem 0 0 -0.6rem;
    }
  }
  > input:checked + i {
    &:after {
      background-color: var(--primary-color);
      animation: radioAni 0.25s linear forwards;
    }
  }
  &.small:not(.btn, .switch) {
    > i {
      &:after {
        width: 1rem;
        height: 1rem;
        margin: -0.5rem 0 0 -0.5rem;
      }
    }
  }
}
@keyframes chkeckboxAni {
  0% {
    clip: rect(0, 0, 2.4rem, 0);
  }
  100% {
    clip: rect(0, 2.4rem, 2.4rem, 0);
  }
}
@keyframes radioAni {
  0% {
    transform: scale(0);
  }
  60% {
    transform: scale(1.3);
  }
  100% {
    transform: scale(1);
  }
}
.chk-item-list {
  .chk-item + .chk-item {
    margin-top: 0.8rem;
  }
}
.chk-item {
  border: 0.1rem solid #eee;
  border-radius: 0.4rem;
  transition: border 0.3s;
  &.checked {
    border-color: var(--primary-color);
  }
  > .checkbox,
  > .radio {
    display: block;
    > input,
    > i {
      left: 1.6rem;
      top: 1.4rem;
    }
    > i + .lbl {
      padding: 1.2rem 2rem 1.2rem 4.6rem;
      margin-left: 0;
      line-height: 2.4rem;
    }
    .lbl-child {
      padding: 1.4rem 0;
      margin: 0 1.6rem;
      border-top: 0.1rem solid #ccc;
      line-height: 1.5;
      font-size: 1.2rem;
      color: #333;
    }
  }
  &.ty2 {
    > .checkbox,
    > .radio {
      i {
        display: none;
      }
      .lbl {
        padding: 2rem 1.6rem;
      }
    }
    + .chk-item {
      margin-top: 1.2rem;
    }
  }
}
.chk-wrap {
  padding: 0.8rem 0;
  margin-top: 0.8rem;
  &:first-child {
    margin-top: 0;
  }
  .radio,
  .checkbox {
    margin-top: 0.4rem;
    margin-bottom: 0.4rem;
  }
}
.btn-wrap-grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 1.2rem;
  .button {
    width: 100%;
    padding-left: 0.3rem;
    padding-right: 0.3rem;
  }
}
.checkbox-wrap {
  .radio,
  .checkbox {
    + .radio,
    + .checkbox {
      margin-top: 1.6rem;
    }
  }
}
.agree-dl {
  .agree-dt {
    padding: 2rem 0;
    + .agree-dd {
      border-top: 0.1rem solid #ebebeb;
      padding-top: 2rem;
    }
  }
  .checkbox {
    .lbl {
      padding-right: 3rem;
    }
    .i-ico-arr-right-16 {
      position: absolute;
      top: 0.4rem;
      right: 0;
      margin-top: 0;
    }
  }
  &.folding {
    .agree-dt {
      .ui-folding-btn {
        display: block;
        position: absolute;
        top: 0;
        right: 0;
        i {
          vertical-align: top;
          transform: rotate3d(1, 0, 0, 0);
          transition: 0.3s;
        }
        &.open {
          i {
            transform: rotate3d(1, 0, 0, 180deg);
          }
        }
      }
    }
  }
}
